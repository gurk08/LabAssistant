#–∏–º–ø–æ—Ä—Ç –Ω—É–∂–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import telebot
import calc
from telebot import types
import matplotlib.pyplot as plt
import os
import numpy as np
import matplotlib
import logging
matplotlib.use('Agg')

bot = telebot.TeleBot('–¢–û–ö–ï–ù') #—Ç—É—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª BotFather
dev_id = 111111111 #—Ç—É—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è id —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞ –ø—Ä—è–º—É—é –ø—Ä–∏–π–¥–µ—Ç –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å


media_dir = 'files'

#—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
translation_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
btn1 = types.KeyboardButton('1Ô∏è‚É£')
btn2 = types.KeyboardButton('2Ô∏è‚É£')
btn3 = types.KeyboardButton('3Ô∏è‚É£')
btn4 = types.KeyboardButton('4Ô∏è‚É£')
btn5 = types.KeyboardButton('5Ô∏è‚É£')
btn6 = types.KeyboardButton('6Ô∏è‚É£')
translation_markup.add(btn1, btn2, btn3,btn4,btn5,btn6) 



acts_markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
btn12 = types.KeyboardButton('‚ù∂')
btn22 = types.KeyboardButton('‚ù∑')
btn32 = types.KeyboardButton('‚ù∏')
btn42 = types.KeyboardButton('‚ùπ')
acts_markup.add(btn12, btn22, btn32,btn42)

user_state = {} # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

#–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
@bot.message_handler(commands=['start'])
def start(message):
    user_state[message.chat.id] = {"method": None, "profile": None, "shape": None}
    bot.send_message(message.from_user.id, 
                          text=f"–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö –∑–∞–¥–∞—á. –Ø –º–æ–≥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Å:\n"
                               f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥–æ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑–æ–º —Å–ø–µ–∫—Ç—Ä–æ–≤.\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ–º —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∫–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å? ü§î\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '‚ù∂':
        bot.send_message(message.from_user.id, "–ö–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–≤–æ–¥ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", parse_mode='Markdown')
        bot.send_message(message.from_user.id, 
                          text=f"1Ô∏è‚É£–ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è --> –î–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã\n"
                               f"2Ô∏è‚É£–î–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã --> –ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è\n"
                               f"3Ô∏è‚É£–î–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã --> –≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞\n"
                               f"4Ô∏è‚É£–≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞ --> –î–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã\n"
                               f"5Ô∏è‚É£–≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞ --> –ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è\n"
                                f"6Ô∏è‚É£–ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è --> –≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É–µ—Ç –Ω–æ–º–µ—Ä—É –Ω—É–∂–Ω–æ–π –≤–∞–º –æ–ø–µ—Ä–∞—Ü–∏–∏ ",reply_markup=translation_markup)
    elif message.text == '‚ù∑':
        bot.send_message(message.from_user.id, "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ txt, –≥–¥–µ –∫–∞–∂–¥–∞—è —Ç–æ—á–∫–∞ —Å–ø–µ–∫—Ç—Ä–∞ - –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ—á–∫–∞, –¥–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã (–ø—Ä–æ–±–µ–ª –∏–ª–∏ —Ç–∞–±) –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_file)
    elif message.text == '1Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É –∏–∑–ª—É—á–µ–Ω–∏—è –≤ –ì–µ—Ä—Ü–∞—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_frequency_to_wavelen)
    elif message.text == '2Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –≤–æ–ª–Ω—ã –≤ –º–µ—Ç—Ä–∞—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_wavelen_to_frequency)
    elif message.text == '3Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –≤–æ–ª–Ω—ã –≤ –º–µ—Ç—Ä–∞—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_wavelen_to_enph)
    elif message.text == '4Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —ç–Ω–µ—Ä–≥–∏—é —Ñ–æ—Ç–æ–Ω–∞ –≤ –î–∂–æ—É–ª—è—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_enph_to_wavelen)
    elif message.text == '5Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —ç–Ω–µ—Ä–≥–∏—é —Ñ–æ—Ç–æ–Ω–∞ –≤ –î–∂–æ—É–ª—è—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_frequency_to_enph)
    elif message.text == '6Ô∏è‚É£':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É –∏–∑–ª—É—á–µ–Ω–∏—è –≤ –ì–µ—Ä—Ü–∞—Ö", parse_mode='Markdown',reply_markup=None)
        bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª—è—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª —Ç–æ—á–∫–∏", parse_mode='Markdown',reply_markup=None)
        bot.register_next_step_handler(message, handle_frequency_to_enph)
    elif message.text == '‚ù∏':
        try:
            user_state[message.chat.id]["method"] = None
            user_state[message.chat.id]["profile"] = None
            user_state[message.chat.id]["shape"] = None
            choose_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            choose_markup.add("–°—Ä–µ–¥–Ω—è—è –º–æ—â–Ω–æ—Å—Ç—å", "–≠–Ω–µ—Ä–≥–∏—è –∏–º–ø—É–ª—å—Å–∞")
            bot.send_message(message.chat.id, "–ü–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ñ–ª—é–µ–Ω—Å?", reply_markup=choose_markup)
            bot.register_next_step_handler(message, choose_method_fluence) 
        except KeyError as e:
            logging.error(f"KeyError in user_state: {e}")
            bot.send_message(chat_id=message.chat.id, text="–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞–∂–º–∏—Ç–µ —Å—é–¥–∞: /start")
    elif message.text == '‚ùπ':
        bot.send_message(message.chat.id, "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –±–æ—Ç–µ, –∞ —á—Ç–æ –µ—â—ë –º–æ–∂–Ω–æ  —É–ª—É—á—à–∏—Ç—å",reply_markup=None)
        bot.register_next_step_handler(message, feedback) 
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –≤–µ–ª–∏—á–∏–Ω:
def handle_frequency_to_wavelen(message):
    global freq 
    try:
        freq = float(message.text)
        res = calc.frequency_to_wavelen(freq)
        bot.send_message(message.from_user.id, f"–î–ª–∏–Ω–Ω–∞ –≤–æ–ª–Ω—ã: {str(res)} –Ω–∞–Ω–æ–º–µ—Ç—Ä–æ–≤")
        bot.send_message(message.from_user.id, calc.rangewaves(float(res)))
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å.")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
def handle_frequency_to_enph(message):
    global freq 
    try:
        freq = float(message.text)
        res = str(calc.frequency_to_enph(freq))
        bot.send_message(message.from_user.id, f"–≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞: {res} –¥–∂–æ—É–ª–µ–π")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
def handle_enph_to_wavelen(message):
    global enph
    try:
        enph = float(message.text)
        res = str(calc.enph_to_wavelen(enph))
        bot.send_message(message.from_user.id, f"–î–ª–∏–Ω–Ω–∞ –≤–æ–ª–Ω—ã: {res} –Ω–∞–Ω–æ–º–µ—Ç—Ä–æ–≤")
        bot.send_message(message.from_user.id, calc.rangewaves(float(res)))
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
def handle_enph_to_frequency(message):
    global enph
    try:
        enph = float(message.text)
        res = calc.enph_to_frequency(enph)
        bot.send_message(message.from_user.id, f"–ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è: {res} –≥–µ—Ä—Ü")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
def handle_wavelen_to_frequency(message):
    global wavelen
    try:
        wavelen = float(message.text)
        res = calc.wavelen_to_frequency(wavelen)
        bot.send_message(message.from_user.id, f"–ß–∞—Å—Ç–æ—Ç–∞ –∏–∑–ª—É—á–µ–Ω–∏—è: {res} –≥–µ—Ä—Ü")
        bot.send_message(message.from_user.id, calc.rangewaves(float(wavelen)))
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
def handle_wavelen_to_enph(message):
    global wavelen
    try:
        wavelen = float(message.text)
        res = calc.wavelen_to_enph(wavelen)
        bot.send_message(message.from_user.id, f"–≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞: {res} –¥–∂–æ—É–ª–µ–π")
        bot.send_message(message.from_user.id, calc.rangewaves(float(wavelen)))
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.from_user.id, "–ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
        
# –ö–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–ø–µ–∫—Ç—Ä–∞
def handle_file(message):
    if message.document:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        with open(os.path.join(media_dir, 'spectrum.txt'), 'wb') as f:
            f.write(downloaded_file)

        result_message,plot= calc.analyze_spectrum("files/spectrum.txt")
        bot.send_message(message.from_user.id, result_message,reply_markup=acts_markup)
        bot.send_photo(message.from_user.id, photo=plot)
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)
        


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –¥–ª—è —Ñ–ª—é–µ–Ω—Å–∞
def choose_method_fluence(message):
    a = message.text
    user_state[message.chat.id]["method"] = a
    
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –ø—Ä–æ—Ñ–∏–ª—å —É –ª–∞–∑–µ—Ä–∞?")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ì–∞—É—Å—Å–æ–≤—Å–∫–∏–π", "–ü–ª–æ—Å–∫–∏–π")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:", reply_markup=markup)
    bot.register_next_step_handler(message, choose_profile_fluence) 

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Ñ–ª—é–µ–Ω—Å–∞
def choose_profile_fluence(message):
    user_state[message.chat.id]["profile"] = message.text
    if message.text == "–ì–∞—É—Å—Å–æ–≤—Å–∫–∏–π" and user_state[message.chat.id]["method"] == "–≠–Ω–µ—Ä–≥–∏—è –∏–º–ø—É–ª—å—Å–∞":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –ª—É—á–∞ (–≤ –º–º) –∏ —ç–Ω–µ—Ä–≥–∏—é –∏–º–ø—É–ª—å—Å–∞ (–≤ –º–î–∂) —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –í –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É")
        bot.register_next_step_handler(message, handle_gauss_fluence1)
    elif message.text == "–ì–∞—É—Å—Å–æ–≤—Å–∫–∏–π" and user_state[message.chat.id]["method"] == "–°—Ä–µ–¥–Ω—è—è –º–æ—â–Ω–æ—Å—Ç—å":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –ª—É—á–∞ (–≤ –º–º), —Å—Ä–µ–¥–Ω—é—é –º–æ—â–Ω–æ—Å—Ç—å (–≤ –í—Ç) –∏ —á–∞—Å—Ç–æ—Ç—É —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏–º–ø—É–ª—å—Å–æ–≤(–≤ –ì—Ü) —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –í –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É")
        bot.register_next_step_handler(message, handle_gauss_fluence2)
    elif message.text == "–ü–ª–æ—Å–∫–∏–π":
        bot.send_message(message.chat.id, "–ö–∞–∫–∞—è —Ñ–æ—Ä–º–∞ —É –ª—É—á–∞?")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("–ö—Ä—É–≥–ª—ã–π", "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π", "–≠–ª–ª–∏–ø—Å")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:", reply_markup=markup)
        bot.register_next_step_handler(message, choose_shape_fluence)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã –¥–ª—è –ø–ª–æ—Å–∫–æ–≥–æ –ª—É—á–∞
def choose_shape_fluence(message):
    user_state[message.chat.id]["shape"] = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                                      "  - –ö—Ä—É–≥: –¥–∏–∞–º–µ—Ç—Ä (–º–º)\n"
                                      "  - –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫: —à–∏—Ä–∏–Ω–∞ (–º–º) –≤—ã—Å–æ—Ç–∞ (–º–º)\n"
                                      "  - –≠–ª–ª–∏–ø—Å: –±–æ–ª—å—à–∞—è –æ—Å—å (–º–º) –º–∞–ª–∞—è –æ—Å—å (–º–º)\n"
                                      "–í –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É")
    
    bot.register_next_step_handler(message, handle_flat_fluence)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ì–∞—É—Å—Å–æ–≤—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
def handle_gauss_fluence1(message):
    try:
        data = message.text.split()
        diameter = float(data[0])
        energy = float(data[1])
        fluence = (2 * energy) / (3.14159 * (diameter / 2)**2)
        area = 3.14159 * (diameter / 2)**2
        bot.send_message(message.chat.id, f"–§–ª—é–µ–Ω—Å: {fluence:.2f} –î–∂/—Å–º¬≤")
        bot.send_message(message.chat.id, f"–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞: {area:.2f} —Å–º¬≤")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

def handle_gauss_fluence2(message):
    try:
        data = message.text.split()
        diameter = float(data[0])/10
        pow = float(data[1])
        freq = float(data[2])
        energy = pow//freq
        area = 3.14159 * (diameter / 2)**2
        fluence = (2 * energy) / (3.14159 * (diameter / 2)**2)
        bot.send_message(message.chat.id, f"–§–ª—é–µ–Ω—Å: {fluence:.2f} –î–∂/—Å–º¬≤")
        bot.send_message(message.chat.id, f"–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞: {area:.2f} —Å–º¬≤")
        bot.send_message(message.chat.id, f"–≠–Ω–µ—Ä–≥–∏—è –∏–º–ø—É–ª—å—Å–∞: {energy:.2f} –î–∂¬≤")


        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ü–ª–æ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
def handle_flat_fluence(message):
    try:
        data = message.text.split()
        method = user_state[message.chat.id]["method"]
        shape = user_state[message.chat.id]["shape"]
        if shape == "–ö—Ä—É–≥–ª—ã–π":
            diameter = float(data[0])
            area = 3.14159 * (diameter / 2)**2
        elif shape == "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π":
            width = float(data[0])
            height = float(data[1])
            area = width * height
        elif shape == "–≠–ª–ª–∏–ø—Å":
            major_axis = float(data[0])
            minor_axis = float(data[1])
            area = 3.14159 * (major_axis / 2) * (minor_axis / 2)
        if user_state[message.chat.id]["method"]== "–≠–Ω–µ—Ä–≥–∏—è –∏–º–ø—É–ª—å—Å–∞":
            user_state[message.chat.id]["area"] = area/100  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–æ—â–∞–¥—å –≤ user_state
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —ç–Ω–µ—Ä–≥–∏—é –∏–º–ø—É–ª—å—Å–∞ (–≤ –º–î–∂).–í –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É")
            bot.register_next_step_handler(message, handle_calc_flat_fluence1)  # –í—ã–∑—ã–≤–∞–µ–º handle_calc_flat_fluence1
        elif user_state[message.chat.id]["method"] == "–°—Ä–µ–¥–Ω—è—è –º–æ—â–Ω–æ—Å—Ç—å":
            user_state[message.chat.id]["area"] = area/100  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–æ—â–∞–¥—å –≤ user_state
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –º–æ—â–Ω–æ—Å—Ç—å (–≤ –í—Ç) –∏ —á–∞—Å—Ç–æ—Ç—É –∏–º–ø—É–ª—å—Å–æ–≤ (–≤ –ì—Ü) —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –í –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É")
            bot.register_next_step_handler(message, handle_calc_flat_fluence2)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")



def handle_calc_flat_fluence1(message):
    try:
        area = user_state[message.chat.id]["area"]
        data = message.text.split()
        energy = float(data[0])/1000
        fluence = energy /area
        bot.send_message(message.chat.id, f"–§–ª—é–µ–Ω—Å: {fluence:.2f} –î–∂/—Å–º¬≤")
        bot.send_message(message.chat.id, f"–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞: {area:.2f} —Å–º¬≤")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)


def handle_calc_flat_fluence2(message):
    try:
        area = user_state[message.chat.id]["area"]
        data = message.text.split()
        pow = float(data[0])
        freq = float(data[1])
        energy = pow/freq
        fluence = energy /area
        bot.send_message(message.chat.id, f"–§–ª—é–µ–Ω—Å: {fluence:.2f} –î–∂/—Å–º¬≤")
        bot.send_message(message.chat.id, f"–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞: {area:.2f} —Å–º¬≤")
        bot.send_message(message.chat.id, f"–≠–Ω–µ—Ä–≥–∏—è –∏–º–ø—É–ª—å—Å–∞: {energy:.2f} –î–∂¬≤")

        bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
        bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)

    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")

def feedback(message):
    feedback_text = f"–û—Ç–∑—ã–≤ –æ—Ç @{message.from_user.username} ({message.from_user.first_name} {message.from_user.last_name}):\n\n{message.text}"
    bot.send_message(dev_id, feedback_text) # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤–∞–º
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üëç")
    bot.send_message(message.from_user.id, "–ß—Ç–æ —è –µ—â–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å ?",reply_markup=acts_markup)
    bot.send_message(message.from_user.id, 
                          text=f" ‚ù∂ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω\n"
                               f" ‚ù∑ –ê–Ω–∞–ª–∏–∑ —Å–ø–µ–∫—Ç—Ä–æ–≤\n"
                               f" ‚ù∏ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–ª—é–µ–Ω—Å–∞ –ª–∞–∑–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
                               f" ‚ùπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                               f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n",reply_markup=acts_markup)


if __name__ == '__main__':
   bot.polling(non_stop = True) 